Watch：关注一个项目的动态，主要是都在做什么。
Follow：关注一个人的动态，主要是都在做什么。Followers显示都有那些人在关注你自己，Following是你都关注了那些人。
Star：GitHub的一大特色就是能够为软件库加星标。用户可以通过这个操作将其他软件库加入到“已加星标的软件库”列表中，这样用户可以关注自己感兴趣的项目并发现类似的项目。这也是最重要的评级机制之一，因为软件库的星星越多，它通常就越受欢迎和重要。它在搜索结果中也会位于更突出的位置。
Projects：是帮助用户组织需要完成的问题和工作的看板。实际上相当于项目管理的功能，安排任务，排计划，跟踪完成进度等。
Issues：是对代码提问题的地方，可以对问题进行标记，相当于一个BUG跟踪系统。里边有一个Milestones，里程碑可以与问题关联，实际相当于有一个解决计划。
commits比较：希望将一个分支与另一个分支进行比较，或希望将最新的commit与当前使用的版本进行比较，以便随时查看更改。可以利用GitHub比较视图执行此操作：只需在软件库名称末尾添加/compare即可。

GitHub也有一个trending页面，它会推荐在特定时间段内（例如今天或本周或本月）获得最多星星的软件库。

导航条
1.  LOGO：点击 GitHub 的 LOGO 就进入控制面板 
2.  Searth：搜索窗口，在这里输入想找的用户或代码片段，就可以搜索到与之相关的信息。可以寻找查看各大开源项目  
3.  Pull Requests：显示用户已进行过的 Pull Request。通过这里，开发者可以很方便地追踪 Pull Request 的后续情况。 
4.  Issues：在这里可以查看用户拥有权限的仓库或分配给自己的Issue。当用户同时进行多个项目时，可以在这里一并查看 Issue 
5.  Marketplace：向开发者提供工具改进和定制工作流。 
6.  Gist：Gist功能主要用于管理及发布一些没必要保存在仓库中的代码，比如小的代码片段等。笔者就经常把一些随便编写的脚本代码等放在 Gist中。系统会自动管理更新历史，并且提供了 Fork 功能。另外，通过 Gist 还可以很方便地为同事编写代码示例。  
7.  Create a new：创建 respository，gist，organization
8.  用户信息：点击后会显示用户的个人信息页面

1.  Watch/ Start/ Fork  眼睛图标旁边写着 Watch 字样。点击这个按钮就可以 Watch 该仓库，今后该仓库的更新信息会显示在用户的公开活动中。 Star 旁边的数字表示给这个仓库添加Star 的人数。这个数越高，代表该仓库越受关注。 Watch 与Star 有所不同，Watch 之后该仓库的相关信息会在后述Notifications 中显示，让用户可以追踪仓库的内容
 Star 更像是书签，让用户将来可以在Star 标记的列表中找到该仓库。另外，Star 数还 GitHub 上判断仓库热门程度的指标之一。 
旁边的分叉图标是 Fork 按钮，后面的数字代表该仓库被 Fork 至各用户仓库的次数。这个数字越大，表示参与这个仓库开发的人越多。

2.  Code 
显示该仓库中的文件列表。仓库名下方是该仓库的简单说明  

3.  Issues 用于 BUG 报告、功能添加、方向性讨论等，将这些以 Issue 形式进行管理。Pull Request 时也会创建 Issue。旁边显示的数字是当前处于 Open 状态的Issue数。 

4.  Pull requests 
在 Pull Requests 中可以列表查看并管理 Pull Request 。代码的更改和讨论都可以在这里进行。旁边显示的数字表示尚未 Close 的 Pull Request  

5.  Wiki 
Wiki是一种比 HTML 语法更简单的页面描述功能。常用于记录开发者之间应该共享的信息或软件文档。数字表示当前Wiki的页面数量。 

6.  Setting

点击它可以打开账户设置页面。在这里可以进行个人信息、安全管理、付费方案的设置，各位在使用 GitHub 时请务必浏览一遍  

7.  Insights Pulse: 显示该仓库最近的活动信息。该仓库中的软件是无人问津，还是在火热地开发之中，从这里可以一目了然。Graphs：以图表形式显示该仓库的各项指标。让用户轻松了解该仓库的活动

8.  commits

在这里可以查看当前分支的提交历史。左侧的数字表示提交数。

9. branches

可以查看仓库的分支列表。左侧的数字表示当前拥有的分支数。 

10. releases

显示仓库的标签（Tag）列表。同时可以将标签加入时的文件以归 

11.  contributors

显示对该仓库进行过提交的程序员名单。如果您也对该仓库发送过 Pull Request 并且被采纳，那么在这里就能找到自己的名字。左边的数字是程序员的人数。 注意：README。一般而言，README 中记录着该仓库中软件的说明或使用方法以及许可协议等信息，请务必加以阅读。
